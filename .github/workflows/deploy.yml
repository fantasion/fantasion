---
name: Deployment
on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*'

jobs:
  deploy-fantasion-teaser:
    name: Deploy teaser website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install rsync
          ansible-galaxy install -r requirements-ansible.yml
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.TEASER_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.TEASER_KNOWN_HOSTS }}
      - name: Deploy app
        run: |
          cd ./packages/fantasion-teaser
          echo -e "[web]\n${{ secrets.TEASER_DEPLOY_HOST }}\n" > inventory
          ansible-playbook deploy.yml -i inventory

  terraform:
    name: Deploy terraform resources
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: packages
      - name: Configure credentials
        run: echo -e "${{ secrets.GCP_CREDENTIALS }}" > credentials.json
      - name: Deploy app
        env:
          TF_VAR_GCP_CREDENTIALS: ./credentials.json
          TF_VAR_GCP_USER: ${{ secrets.GCP_USER }}
          TF_VAR_GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        run: |
          cd ./terraform
          terraform init
          terraform validate
          terraform apply --auto-approve
