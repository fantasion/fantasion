# Generated by Django 3.2.12 on 2022-04-02 22:06

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import djmoney.models.fields
import encrypted_model_fields.fields
import fantasion_banking.fields
import fantasion_generics.money
import fantasion_generics.titles


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', fantasion_generics.titles.TitleField(help_text='Object name', max_length=255, verbose_name='Title')),
                ('description', fantasion_generics.titles.DescriptionField(help_text='Describe this in a couple of sentences. Use Markdown if necessary, but keeping this a plain text will yield better results', verbose_name='Short Description')),
                ('account_number', fantasion_banking.fields.AccountNumberField(blank=True, help_text='Account number of person sending this payment', max_length=255, null=True, verbose_name='Account number')),
                ('bank', fantasion_banking.fields.BankNumberField(blank=True, help_text='Bank sending this payment', max_length=63, null=True, verbose_name='Bank')),
                ('iban', fantasion_banking.fields.IBanField(blank=True, help_text='International bank account number', max_length=255, null=True, verbose_name='IBAN')),
                ('bic', fantasion_banking.fields.BicField(blank=True, help_text='Business identification code, specified by SWIFT', max_length=255, null=True, verbose_name='BIC')),
                ('ballance_currency', djmoney.models.fields.CurrencyField(choices=[('CZK', 'Kč'), ('EUR', '€')], default='CZK', editable=False, max_length=3)),
                ('ballance', fantasion_generics.money.MoneyField(decimal_places=2, default_currency='CZK', max_digits=14, verbose_name='Ballance')),
                ('driver', models.PositiveIntegerField(blank=True, choices=[(1, 'Offline'), (2, 'ČSOB')], null=True, verbose_name='Driver')),
                ('fio_readonly_key', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='BankScrape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('days_back', models.PositiveIntegerField(blank=True, null=True)),
                ('source', models.PositiveIntegerField(choices=[(1, 'Manual'), (2, 'Cron')], default=1)),
                ('status', models.PositiveIntegerField(choices=[(1, 'Requested'), (2, 'Succeeded'), (3, 'Failed')], default=1)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scrapes', to='fantasion_banking.account', verbose_name='Account')),
            ],
            options={
                'verbose_name': 'Bank Scrape',
                'verbose_name_plural': 'Bank scrapes',
            },
        ),
        migrations.CreateModel(
            name='CounterParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', fantasion_generics.titles.TitleField(help_text='Object name', max_length=255, verbose_name='Title')),
                ('description', fantasion_generics.titles.DescriptionField(help_text='Describe this in a couple of sentences. Use Markdown if necessary, but keeping this a plain text will yield better results', verbose_name='Short Description')),
            ],
            options={
                'verbose_name': 'Counterparty',
                'verbose_name_plural': 'Counterparties',
            },
        ),
        migrations.CreateModel(
            name='Promise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('amount_currency', djmoney.models.fields.CurrencyField(choices=[('CZK', 'Kč'), ('EUR', '€')], default='CZK', editable=False, max_length=3)),
                ('amount', fantasion_generics.money.MoneyField(decimal_places=2, default_currency='CZK', max_digits=14, verbose_name='Amount')),
                ('variable_symbol', models.BigIntegerField(blank=True, help_text='Optional payment identifier', null=True, verbose_name='variableSymbol')),
                ('constant_symbol', models.BigIntegerField(blank=True, help_text='Purpose code of the payment specified by Czech banking system.', null=True, verbose_name='constantSymbol')),
                ('specific_symbol', models.BigIntegerField(blank=True, help_text='This number focuses variable symbol.', null=True, verbose_name='Specific symbol')),
                ('start', models.DateField(default=django.utils.timezone.now, verbose_name='Start')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End')),
                ('initial_amount_currency', djmoney.models.fields.CurrencyField(choices=[('CZK', 'Kč'), ('EUR', '€')], default='CZK', editable=False, max_length=3)),
                ('initial_amount', fantasion_generics.money.MoneyField(decimal_places=2, default_currency='CZK', max_digits=14, verbose_name='Initial amount')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Expected'), (2, 'Paid'), (3, 'Underpaid'), (4, 'Overpaid')], default=1, verbose_name='Status')),
                ('title', fantasion_generics.titles.FacultativeTitleField(blank=True, help_text='Object name', max_length=255, null=True, verbose_name='Title')),
                ('repeat', models.CharField(blank=True, choices=[(None, 'Never'), ('P1M', 'Monthly'), ('P1Y', 'Yearly')], max_length=31, null=True, verbose_name='Repeat')),
            ],
            options={
                'verbose_name': 'Promise',
                'verbose_name_plural': 'Promises',
                'unique_together': {('variable_symbol',)},
            },
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('amount_currency', djmoney.models.fields.CurrencyField(choices=[('CZK', 'Kč'), ('EUR', '€')], default='CZK', editable=False, max_length=3)),
                ('amount', fantasion_generics.money.MoneyField(decimal_places=2, default_currency='CZK', max_digits=14, verbose_name='Amount')),
                ('variable_symbol', models.BigIntegerField(blank=True, help_text='Optional payment identifier', null=True, verbose_name='variableSymbol')),
                ('constant_symbol', models.BigIntegerField(blank=True, help_text='Purpose code of the payment specified by Czech banking system.', null=True, verbose_name='constantSymbol')),
                ('specific_symbol', models.BigIntegerField(blank=True, help_text='This number focuses variable symbol.', null=True, verbose_name='Specific symbol')),
                ('sender_account_number', fantasion_banking.fields.AccountNumberField(blank=True, help_text='Account number of person sending this payment', max_length=255, null=True, verbose_name='Account number')),
                ('sender_bank', fantasion_banking.fields.BankNumberField(blank=True, help_text='Bank sending this payment', max_length=63, null=True, verbose_name='Bank')),
                ('sender_iban', fantasion_banking.fields.IBanField(blank=True, help_text='International bank account number', max_length=255, null=True, verbose_name='IBAN')),
                ('sender_bic', fantasion_banking.fields.BicField(blank=True, help_text='Business identification code, specified by SWIFT', max_length=255, null=True, verbose_name='BIC')),
                ('ident', models.CharField(blank=True, help_text='Payment identificator, usually generated by the bank', max_length=255, null=True, verbose_name='Payment identificator')),
                ('received_at', models.DateTimeField(blank=True, help_text='When was the payment received by our bank', null=True, verbose_name='Date Time received')),
                ('user_identification', models.CharField(blank=True, help_text='User identification given by the bank', max_length=255, null=True, verbose_name='User identification')),
                ('message', models.TextField(blank=True, max_length=255, null=True, verbose_name='Message')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='fantasion_banking.account')),
                ('counterparty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='statements', to='fantasion_banking.counterparty')),
                ('promise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='fantasion_banking.promise')),
                ('scrape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='fantasion_banking.bankscrape')),
            ],
            options={
                'verbose_name': 'Statement',
                'verbose_name_plural': 'Statements',
            },
        ),
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('amount_currency', djmoney.models.fields.CurrencyField(choices=[('CZK', 'Kč'), ('EUR', '€')], default='CZK', editable=False, max_length=3)),
                ('amount', fantasion_generics.money.MoneyField(decimal_places=2, default_currency='CZK', max_digits=14, verbose_name='Amount')),
                ('source', models.PositiveIntegerField(choices=[(1, 'Manually created'), (2, 'Initial debt'), (3, 'Recurring generated')], default=1)),
                ('description', fantasion_generics.titles.FacultativeDescriptionField(blank=True, help_text='Describe this in a couple of sentences. Use Markdown if necessary, but keeping this a plain text will yield better results', null=True, verbose_name='Short Description')),
                ('maturity', models.DateField(verbose_name='Maturity')),
                ('promise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debts', to='fantasion_banking.promise')),
            ],
            options={
                'verbose_name': 'Debt',
                'verbose_name_plural': 'Debts',
            },
        ),
        migrations.CreateModel(
            name='KnownAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('sender_account_number', fantasion_banking.fields.AccountNumberField(blank=True, help_text='Account number of person sending this payment', max_length=255, null=True, verbose_name='Account number')),
                ('sender_bank', fantasion_banking.fields.BankNumberField(blank=True, help_text='Bank sending this payment', max_length=63, null=True, verbose_name='Bank')),
                ('sender_iban', fantasion_banking.fields.IBanField(blank=True, help_text='International bank account number', max_length=255, null=True, verbose_name='IBAN')),
                ('sender_bic', fantasion_banking.fields.BicField(blank=True, help_text='Business identification code, specified by SWIFT', max_length=255, null=True, verbose_name='BIC')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='fantasion_banking.counterparty')),
            ],
            options={
                'verbose_name': 'Known account',
                'verbose_name_plural': 'Known accounts',
                'unique_together': {('sender_account_number', 'sender_bank'), ('sender_iban',)},
            },
        ),
    ]
